import requests
import time

cookie = "_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|_73C13CAF8078C3C93D705B0672C06D2119F11E70A646DC5485C3ABD1D547254A6E37DCADF51B1543A77627D7429DDEB3D5480A443F969C4C69F3A453D068C7313DE9D808EB0752648C565963A446D33379CBB7817813D602E18A8A5B9DD87A5A0E4FE02E1809D537B4CD23D3A5E0930998405B84476E695100C7B45B211A9CF00A892FBDA5F5D16DAB15E2064AF8414C3F4FF0B8D26420122AD4AF4A52CEA4C39E6B20CCC182C0A6C597BA7B687A8E3A8A2454F2ABC58B735DF1C2605ADFA4DAFE8B2E5640AF84710C8C55C2E6D679F2905AD8038F6C59BEB2D46858596D74DD0AB40070AE071C77145926CEEE9614AFB2A8DEBED618FDB036A935E42AE17973A70F706688EF08FEB4C47E04C65ACC7B2259426EB156E87804873F8BDA8913007FC69C597E86A9000199D6AA86D743F8C39A472F8367F5D7DC094A1BA3BB5CE04FCCD94ADA651BFA1F9C56EBC717308CEEDC6B020ACD874D79EFBDDF6016B2E3603FA9C02A288D267097D86C3356E4DAB1541B1DB0B10572F8204592A48806FF213933CAE2837691F63F0F90F70C9F7D743FB9A24AEA778F8F9E7E720672C3BAE84AD8F2C942D4AB7D64E3C6E66BB0119E6E9FE0B3D3EC2BDDB96E3FDC946725681F16A0BF73D8980695B40BBC7DC742D84796CEDBE3F3F0CB5C21DA058568EE76EAF33C3155B46F549710AFC6A1D3A0F36388288047E300872E3522AC5605AB6CFAF0FF790B4C97BDE59E4E84EA649E3C45642EAA3AF761517B058AE6079C8A7418899948B0CFFD94C927BBA284E50B24FB7CB107C49833F7069B102D9EA3523D8E723AF31DADD338D417D0C173A122DA16329789A2B67CFCA9125C5FA2B60FE1D4FDD60CD070CE3BCC305080D5B5D9C6A146C4837586165A9C85FC2EFD01953B1170B796ACD382C5ADEB14BA5D59C6BA841A5E1425DE6AB987495C76F8A388F44827D674D79AA31202296092A9E7C97C73218BF42393D29960EC779274D09D8308358F3B007A8376090294E14607F938EAC1E6572706A071B17A4DBD5B2E011E3629D5A4C9141759BF3E24363EAD9A69475400307E8B4B9ACD36973B1075A798900F6E45F23CE686714BED31E456AA57E9C32E"


response = requests.post("https://economy.roblox.com/", cookies={".ROBLOSECURITY": cookie})
xcfsf = response.headers.get("x-csrf-token")
print(xcfsf)
headers ={
    "accept": "application/json, text/plain, */*",
    "accept-language": "en-US,en;q=0.9,cs;q=0.8,es;q=0.7,ar;q=0.6",
    "content-type": "application/json;charset=UTF-8",
    "sec-ch-ua": "Not_A Brand;v=8, Chromium;v=120, Google Chrome;v=120",
    "sec-ch-ua-mobile": "?0",
    "sec-ch-ua-platform": "Windows",
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "Cookie": "__utma=200924205.868036376.1670801358.1672270193.1673383826.12; _ga=GA1.1.868036376.1670801358; _ga_BK4ZY0C59K=GS1.1.1673401580.2.0.1673401580.0.0.0; GuestData=UserID=-1343099671; .RBXIDCHECK=406ce299-9395-46f3-9d9e-b484e863d40a; RBXSource=rbx_acquisition_time=11/21/2023 5:27:06 PM&rbx_acquisition_referrer=&rbx_medium=Direct&rbx_source=&rbx_campaign=&rbx_adgroup=&rbx_keyword=&rbx_matchtype=&rbx_send_info=1; RBXSessionTracker=sessionid=c42922db-b545-4e21-ac7f-50afe030d54f; .ROBLOSECURITY=_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|ventTrackerV2=CreateDate=12/19/2023 10:11:34 AM&rbxid=2888516847&browserid=145878674644; rbx-ip2=; ak_bmsc=B89AEA9DFFE72C48CF166A95C02030E0~000000000000000000000000000000~YAAQX+4hF7IcOXmMAQAA3lU2hRZeAXl2tVlT5kO7F1+V0a9udAwcWjU1TdbIl+Uuz6BFnFvXNMWei23WZO0Jl1b/dsNJUqyNyhL8Vg/arY3ZDuSbcpgr2+6QW+09BoQ1YweMhNRNqReMbsBKrbpqHQm5lP7HBV5LYpSUtKb2sIOwa1fLyK5KZu0Pbqz3b5Mv/T67RTcqSSvgaWfXqPWSRadw9R1PexTqc1qA7iTFzMaHtQB86Detd07OADLXgCQoZHe3nOB3y/UixrRunl/QfS48i1phhoWtl7flOwIwTlGC1WSAp4HGIepa+KiuXx6uMrhX+dk9RkiQAgFKri6fY1qoUwh8/KUTDtUm51W4Q7Uxwh3TeFIiAfSrexJz1qVAufkAHPMcKDjZ; bm_mi=D8E02C70326F3B972BF9E5B19183776F~YAAQX+4hF2gmOXmMAQAAJPo2hRbeJG9Cqd1mr0tPaGYIGWc2sdKrqTIuUEYi9r7WkcJ4RKNwhT1NfrTNUANPXjUjISLg2WKIsngBv50U1WdIkQHsB1fdu2//J+o59/SttHHxX98PHDBhjhgMXjEftfZYLCgg9vWLW+YfmkT0X/UixI6vcV4G47Ct6VQ/omAxtRO/mAK+RUJqwEdYH6ImBDf+7k1L6TbtRIv0sXwJDhWi8l5Mcfcnam04QYw2AwzHEuqyj5963/N2b9klpEpXeaAsrUb9yp90Ts88vm6rvVSZexLLp5auTRlkhElgHvS38OE0pazEcWrUOK9JvMP5pONZvtG5MvGWQIf7ABqhKE3u18vxujfmOkBC39fFyWScFS61TrbrbzppAsO/IKAoIa+PsEoo~1; bm_sv=4870D1DA6A1C9099DAF220ABC99B26F6~YAAQX+4hF2uqOXmMAQAA/cE9hRacyrIF/LbAzjixSXHHcj4eh0M1BT3/SOHu/h4I0FCPc6rq/ajKjhF046KCnVaZJRNUiTU93lJkudQJyngf9XulNEve6OwFlr8Ltvbzw//epjmu58uB8YMhMpkD7FoAZ+rSBs93by+ivNhfnzUKKzxWeQ+crsGVS1/Ros+mgghmVXpHXZa8YsfcPHZnC2qrqDgNRxkWJToLkuqnoWoY3Y27/i5p3cRIbz4jekw8Iw==~1",

    "Origin": "https://groups.roblox.com",
    "sec-fetch-site": "same-site",
    "x-bound-auth-token": "+FxZDqNjJgxj+aib/EO6ccfWenYXIB5T67WnLVOmAvw=|1703041582|9WwHV8WqaoYwJST/L9XCp4sgssdat2ccGA1vOHKHMC0PgEPurWSHQ8fEsUqX8kzkYIvkYITmSRLaUVr3aHVyHA==",
    "x-csrf-token": f"{xcfsf}",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
}
def leave_group(id):
    response = requests.delete(f"https://groups.roblox.com/v1/groups/{id}/users/2892227915", headers=headers, cookies={".ROBLOSECURITY": cookie})
    
    if response.json() == {}:
        print("Left")
        return {}
    else:
        error_handler(id, response.json())
        return response.json()
        
def error_handler(id, error):
    if error == {'errors': [{'code': 12, 'message': 'This group already has an owner', 'userFacingMessage': 'This group already has an owner.'}]}:
        webhook = "https://discord.com/api/webhooks/1117285595497119854/VeAwkrS0m-1tSQZwMlX9OU9IY5yndgrTie6Kq9UU0YGmWWIW5iKkewsP-uOfkfQa5Zd_"
        data = {"content": "<@&1122677297909080194>"}
        data["embeds"] = [
            {
            "title": "**Failed claiming**",
            "description": f"GID: {id} \n Error code: 12 \n Response: This group already has an owner",
            }
        ]
        leave_group(id)
        return requests.post(webhook,json=data)
    elif error == {}:
        webhook = "https://discord.com/api/webhooks/1117285595497119854/VeAwkrS0m-1tSQZwMlX9OU9IY5yndgrTie6Kq9UU0YGmWWIW5iKkewsP-uOfkfQa5Zd_"
        data = {}
        data["embeds"] = [
            {
            "title": "**Successfully claimed**",
            "description": f"GID: {id} \n Error code: 12 \n Response: This group already has an owner",
            }
        ]
        return "Claimed" 
    else:
        webhook = "https://discord.com/api/webhooks/1117285595497119854/VeAwkrS0m-1tSQZwMlX9OU9IY5yndgrTie6Kq9UU0YGmWWIW5iKkewsP-uOfkfQa5Zd_"
        data = {}
        data["embeds"] = [
            {
            "title": "**Failed claiming**",
            "description": f"GID: {id} \n Error code: Unknown \n Response: {error}",
            }
        ]
        return requests.post(webhook,json=data)

payload = {
  "sessionId": "string",
  "redemptionToken": "string",
  "captchaId": "string",
  "captchaToken": "string",
  "captchaProvider": "string",
  "challengeId": "string"
}
response1 = requests.post("https://groups.roblox.com/v1/groups/16365270/users", headers=headers, json=payload, cookies={".ROBLOSECURITY": cookie})

start_time = time.time()
response2 = requests.post("https://groups.roblox.com/v1/groups/16365270/claim-ownership", headers=headers, cookies={".ROBLOSECURITY": cookie})
thing = error_handler("16365270", response2.json())

end_time = time.time()
print(end_time - start_time)
if thing == "Claimed":
    webhook = "https://discord.com/api/webhooks/1117285595497119854/VeAwkrS0m-1tSQZwMlX9OU9IY5yndgrTie6Kq9UU0YGmWWIW5iKkewsP-uOfkfQa5Zd_"
    data = {}
    data["embeds"] = [
        {
        "title": "**Group Detection**",
        "description": f"GID: 16365270 \n Name: ROCKSTAR DOLLS \n Members: 1 \n Funds: 0 \n Games: 0",
        }
    ]
    

